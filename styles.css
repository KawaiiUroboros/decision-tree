.graph {
    padding: 0px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: flex-start;
    font-size: 11px;
    margin-bottom: 10px;
    width: 462px;
}

.graph .y-axis {
    width: 32px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    line-height: 12px;
}

.graph .canvas-wrapper {
    flex: 1;
    padding: 7px 14px;
}

.graph .x-axis {
    width: 100%;
    height: 17px;
    margin-left: 32px;
    display: flex;
    justify-content: space-between;
    line-height: 12px;
}

.graph .x-axis > div {
    flex-basis: 28px;
    text-align: center;
}

.graph .y-axis > div {
    text-align: end;
}


.graph canvas {
    border: 1px solid #666;
    width: 100%;
    height: 100%;
    transform: scale(1, -1);
    background-image: url("grid.svg");
    background-color: white;
}

.color-select {
    margin: 1px;
    margin-top: 10px;
    width: 30px;
    height: 30px;
    display: inline-block;
}

.color-select:first-child {
    margin-left: 30px;
}

button {
    background-image: linear-gradient(#1b1dff, #0002cd 50%, #0002b9);
    border: 1px solid #00029a;
    background-color: #0002cd;
    border-radius: 4px;
    padding: 9px 14px;
    text-decoration: none;
    font-size: 13px;
    font-weight: bold;
    color: #eee;
    font-family: sans-serif;
    margin: 12px 5px;
}

button:hover {
    background-image: linear-gradient(#0609ff, #0002b9 50%, #0002a4);
    border: 1px solid #000186;
    background-color: #00029a;
    cursor: pointer;
}

button:active {
    background-image: none;
    background-color: #00029a;
    border-color: #000190;
}

button:disabled {
    background-image: none;
    border: 1px solid #000000;
    background-color: #333338;
    border-radius: 4px;
    padding: 9px 14px;
    text-decoration: none;
    font-size: 13px;
    font-weight: bold;
    color: #eee;
    font-family: sans-serif;
}


.generateButtons {
    display: flex;
    justify-content: space-around;
}

.main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.upControls {
    display: flex;
    justify-content: center;
    flex-direction: row;
}

#myCanvas {
    max-height: 400px;
    max-width: 400px;
}

/*
 Transforming nested lists to pretty tree
 
 <div class="tree">
    <ul>
        <li>
            <ul>
            ...
            </ul>
        </li>
        ...
    </ul>
 </div>
 
Source: http://thecodeplayer.com/walkthrough/css3-family-tree

Some other advices about displaying trees: http://stackoverflow.com/questions/1695115/how-do-i-draw-the-lines-of-a-family-tree-using-html-css
*/

* {
    margin: 0;
    padding: 0;
}

.tree ul {
    padding-top: 20px;
    position: relative;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.tree li {
    white-space: nowrap;
    float: left;
    text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after {
    content: '';
    position: absolute;
    top: 0;
    right: 50%;
    border-top: 1px solid #ccc;
    width: 50%;
    height: 20px;
}

.tree li::after {
    right: auto;
    left: 50%;
    border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without
 any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
    display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child {
    padding-top: 0;
}

/*Remove left connector from first child and
 right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after {
    border: 0 none;
}

/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before {
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after {
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    border-left: 1px solid #ccc;
    width: 0;
    height: 20px;
}

.tree li a {
    border: 1px solid #ccc;
    padding: 5px 10px;
    text-decoration: none;
    color: #666;
    font-family: arial, verdana, tahoma;
    font-size: 11px;
    display: inline-block;

    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.tree li a:hover, .tree li a:hover + ul li a {
    background: #c8e4f8;
    color: #000;
    border: 1px solid #94a0b4;
}

/*Connector styles on hover*/
.tree li a:hover + ul li::after,
.tree li a:hover + ul li::before,
.tree li a:hover + ul::before,
.tree li a:hover + ul ul::before {
    border-color: #94a0b4;
}

/*Thats all. I hope you enjoyed it.
 Thanks :)*/